<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->

    <!--    theme: is a collection of attribute that applied to entire app,activity,or virw hierarchy(not just for individual view)
    when you applie a theme evey view or activity applied this theme attribute
    theme can apply to non view elements such the status bar and window background-->




    <!--    style: A style is a collection of attribute that specify the appearance of view or window
    style can specify attribute such font color,font size,back ground..etc-->

    <!--night theme when we change the mobile device to dark mode-->

    <style name="Style" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Customize your dark theme here. -->
        <!-- <item name="colorPrimary">@color/my_dark_primary</item> -->
        <item name="colorPrimary">@color/blue</item>
        <!--  color primary for button and action bar-->

        <item name="colorPrimaryDark">@color/green</item>
        <!--  color primary dark use for status bar-->

        <item name="colorAccent">@color/red</item>
        <!--  use for radio button checkbox rating progress switch floating action button-->


        <item name="colorSecondary">@color/yeelow</item>
        <!--        uses for action floating button-->


        <item name="android:navigationBarColor">@color/blue</item>
        <!--           navigation color-->

        <item name="android:statusBarColor">@color/yeelow</item>
        <!--        status bar for device-->

        <item name="android:textColor">@color/purpule</item>
        <!--        for the text color textview-->

        <item name="android:editTextColor">@color/yeelow</item>
        <!--        color for edit text-->

        <item name="android:colorBackground">@color/green</item>
        <!--        background color-->

        <item name="android:navigationBarDividerColor">@color/red</item>
        <!--        loun l 5at fou2 l navigation bar-->


        <!--        hala2 houn b7ot l style le ana 3mlto 3ashn 5ale kel button nafs heed l style badel ma emro2 3ala kel button-->
        <item name="materialButtonStyle">@style/mybuttonstyle</item>

    </style>

    <!--    i have 3 library:Appcompact
                             MaterialCommponents
                             Android design support library(material 3)-->


    <!--    for text: we can use textappearnce for text any thing of the edit text button text view..etc    -->

    <style name="mystyle" parent="TextAppearance.MaterialComponents.Body1">
        <!--        when we use material commponent use TextAppearance.MaterialComponents.Body1 -->

    </style>


    <style name="mystyle1" parent="TextAppearance.AppCompat.Body1">
        <!--        when we use appcompat use TextAppearance.AppCompat.Body1 -->

    </style>


    <!--    for button:   -->
    <style name="mystyle2" parent="Widget.MaterialComponents.Button">
        <!--        when we use material commponent use Widget.MaterialComponents.Button -->

    </style>

    <style name="mystyle3" parent="Widget.AppCompat.Button">
        <!--        when we use appcompat use Widget.AppCompat.Button-->

    </style>

    <!--    in general for text use TextAppearance

            other ui element use Widget.(AppCompat or MaterialComponents) . name of the ui elemt button,edittext,textview...etc

    -->


    <!--    you can make style for your self and allow another style to inherite it:-->

    <style name="mystyle7">
        <item name="android:height">120dp</item>
        <item name="android:width">120dp</item>
        <item name="android:textColor">@color/red</item>
    </style>


    <style name="mystyle8" parent="mystyle7">
        <item name="android:textSize">32sp</item>
    </style>


    <!--    you can make a style for every ui and make it a style by diffult wich mean 3mlt ana style la button ba3den bade yeh heed l style le kel l button b7ota aw 7a 7ota fa
    ba3mel style berja3 betla3 3al theme ta3et l app w b7et eno item button style w esm l style le ana 3mlto

    exmple:-->

    <style name="mybuttonstyle" parent="Widget.MaterialComponents.Button">
        <item name="backgroundTint">@color/yeelow</item>
        <item name="android:textStyle">italic</item>
        <item name="fontFamily">sans-serif</item>
    </style>

    <!--note to change background clor image use android:background
if i want to change shape corner redius make shape then in back ground applied it

in materialcommponent or appcomat applied to make button style in deffult so use appcompat always-->

    <style name="otherbuttons" parent="Widget.MaterialComponents.Button.OutlinedButton">
        <item name="android:textStyle">italic</item>
        <item name="fontFamily">sans-serif</item>
        <item name="android:textSize">40sp</item>

    </style>


    <style name="otherbuttons1">
        <item name="android:textStyle">bold</item>
        <item name="backgroundTint">@color/blue</item>

    </style>


    <!--if i want to change style for every button i have 2 option use appcompat or materialcommponent

    if i use appcompat i have to make sure the main theme extend appcomat and the style that i make it extend also the widget.appcompat.button

    and if i wnat to change redius i have to change it from shape and when apply the button style in man style use android:style


    while in material commponent i have to make sure extend the material commponent in main style and the style of button extend widget.appcommonent.button
    and if i want to change redius i have to deirectly use cornerredius and in main style when apply style to button use materialbuttonstyle-->


    <style name="Theme.Style" parent="Base.Theme.Style"></style>



</resources>